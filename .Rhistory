install.packages(c("tidyverse","scales","ggmap","rmarkdown"))
install.packages(c("tidyverse", "scales", "ggmap", "rmarkdown"))
q()
3+5
x <- 6
x
y <- 10
x + y
#Data Preprocessing
#Importing the dataset
dataset = read.csv('Data.csv')
setwd("C:/Users/Jesus HH/Desktop/Machine Learning A-Z Template Folder/Part 1 - Data Preprocessing/Section 2 -------------------- Part 1 - Data Preprocessing --------------------")
dataset = read.csv('Data.csv')
View(dataset)
View(dataset)
#Taking care of missing data
dataset$Age = ifelse(is.na(dataset$Age),ave(datset$Age, FUN = function(x) mean(x,na.rm = TRUE)),dataset$Age)
dataset$Age = ifelse(is.na(dataset$Age),ave(dataset$Age, FUN = function(x) mean(x,na.rm = TRUE)),dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),ave(dataset$Age, FUN = function(x) mean(x,na.rm = TRUE)),dataset$Salary)
dataset$Salary = ifelse(is.na(dataset$Salary),ave(dataset$Salary, FUN = function(x) mean(x,na.rm = TRUE)),dataset$Salary)
dataset$Salary = ifelse(is.na(dataset$Salary),ave(dataset$Salary, FUN = function(x) mean(x,na.rm = TRUE)),dataset$Salary)
dataset$Salary = ifelse(is.na(dataset$Salary),ave(dataset$Salary, FUN = function(x) mean(x,na.rm = TRUE)),dataset$Salary)
View(dataset)
View(dataset)
dataset$Salary = ifelse(is.na(dataset$Salary),ave(dataset$Salary, FUN = function(x) mean(x,na.rm = TRUE)),dataset$Salary)
View(dataset)
View(dataset)
dataset$Salary = ifelse(is.na(dataset$Salary),ave(dataset$Salary, FUN = function(x) mean(x,na.rm = TRUE)),dataset$Salary)
View(dataset)
View(dataset)
View(dataset)
View(dataset)
View(dataset)
dataset$Salary = ifelse(is.na(dataset$Salary),ave(dataset$Salary, FUN = function(x) mean(x,na.rm = TRUE)),dataset$Salary)
View(dataset)
View(dataset)
dataset$Salary = ifelse(is.na(dataset$Salary),ave(dataset$Salary, FUN = function(x) mean(x,na.rm = TRUE)),dataset$Salary)
View(dataset)
View(dataset)
dataset = read.csv('Data.csv')
dataset$Salary = ifelse(is.na(dataset$Salary),ave(dataset$Salary, FUN = function(x) mean(x,na.rm = TRUE)),dataset$Salary)
dataset$Age = ifelse(is.na(dataset$Age),ave(dataset$Age, FUN = function(x) mean(x,na.rm = TRUE)),dataset$Age)
dataset$Country = factor(dataset$Country, levels = c('France','Spain','Germany'),labels = c(1,2,3))
dataset$Purchased = factor(dataset$Purchased, levels = c('France','Spain','Germany'\),labels = c(1,2,3))
dataset$Purchased = factor(dataset$Purchased, levels = c('No','Yes'),labels = c(0,1))
#Splitting the dataset into the Training set and Test set
install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchase, SplitRatio = 0.8)
split
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(training_set)
View(training_set)
View(test_set)
View(test_set)
#Feature Scaling
training_set = scale(training_set)
test_set = scale(test_set)
View(training_set)
View(training_set)
View(training_set)
training_set[,2:3] = scale(training_set[,2:3])
test_set[,2:3] = scale(test_set[,2:3])
